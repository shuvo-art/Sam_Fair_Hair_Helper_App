name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install backend dependencies
        run: npm ci

      - name: Build backend
        run: npm run build
        env:
          FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}

      - name: Run backend tests
        run: npm test || echo "No tests defined"
        env:
          NODE_ENV: test
          MONGO_URI: ${{ secrets.TEST_MONGO_URI }}
          JWT_SECRET: test-secret
          OPENAI_API_KEY: test-key
          FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          cache: 'pip'

      - name: Upgrade pip and install Python dependencies
        run: |
          cd samfair
          python3 -m pip install --upgrade pip
          pip install --no-cache-dir -r requirements.txt

  deploy-ecs:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container

      - name: Build and push Docker image to ECR
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/sam-fair-hai-helper-app:latest
          build-args: |
            FIREBASE_SERVICE_ACCOUNT=${{ secrets.FIREBASE_SERVICE_ACCOUNT }}

      - name: Update ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: backend
          image: ${{ steps.login-ecr.outputs.registry }}/sam-fair-hai-helper-app:latest
          environment-variables: |
            NODE_ENV=production
            PORT=5007
            MONGO_URI=${{ secrets.MONGO_URI }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            REFRESH_TOKEN_SECRET=${{ secrets.REFRESH_TOKEN_SECRET }}
            AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_REGION=eu-north-1
            AWS_S3_BUCKET=sam-fair-hair-helper-app
            STRIPE_SECRET_KEY=${{ secrets.STRIPE_SECRET_KEY }}
            STRIPE_WEBHOOK_SECRET=${{ secrets.STRIPE_WEBHOOK_SECRET }}
            EMAIL_USER=${{ secrets.EMAIL_USER }}
            EMAIL_PASS=${{ secrets.EMAIL_PASS }}
            ADMIN_EMAIL=${{ secrets.ADMIN_EMAIL }}
            BASE_URL=${{ secrets.BASE_URL }}
            ALLOWED_ORIGINS=${{ secrets.ALLOWED_ORIGINS }}
            OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
            PINECONE_API_KEY=${{ secrets.PINECONE_API_KEY }}
            FIREBASE_SERVICE_ACCOUNT=${{ secrets.FIREBASE_SERVICE_ACCOUNT }}

      - name: Deploy to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: sam-fair-hai-helper-app-service
          cluster: sam-fair-hai-helper-app-cluster
          wait-for-service-stability: false  # Temporarily disable to avoid timeout

      - name: Check ECS Service Status
        run: |
          aws ecs describe-services \
            --cluster sam-fair-hai-helper-app-cluster \
            --services sam-fair-hai-helper-app-service \
            --region eu-north-1 \
            --query 'services[0].{Status: status, RunningCount: runningCount, DesiredCount: desiredCount, Events: events[0:5]}' \
            --output json